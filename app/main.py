# main.py
import asyncio
import logging
import sys # –î–æ–±–∞–≤—å sys –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ stdout

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
from bot_instance import bot
from aiogram import Dispatcher, Bot
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import BotCommand

from app.handlers.dispatcher import setup_dispatcher

from app.utils.logger import setup_logger

logger = setup_logger(__name__)


async def set_default_commands(bot_instance: Bot): # –ü—Ä–∏–Ω–∏–º–∞–µ–º bot –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
    commands = [
        BotCommand(command="start", description="üèÅ–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\nüõü–ù–∞–ø–∏—Å–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å\n"),
        # BotCommand(command="help", description="üõü–ù–∞–ø–∏—Å–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å"),
    ]
    await bot_instance.set_my_commands(commands)


async def main():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logging.basicConfig(level=logging.INFO, stream=sys.stdout,
                        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s') # –î–æ–±–∞–≤–∏–º —Ñ–æ—Ä–º–∞—Ç
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ FSM
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–ø–µ—Ä–µ–¥–∞–µ–º bot –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è, –µ—Å–ª–∏ –¥—Ä—É–≥–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –µ–≥–æ –æ–∂–∏–¥–∞—é—Ç)
    setup_dispatcher(dp)
    await set_default_commands(bot) # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π bot


    logger.info("–ó–∞–ø—É—Å–∫ polling...")
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
    finally:
        logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
        await bot.session.close()
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")


if __name__ == "__main__":
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º try-except –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logger.info("–í—ã—Ö–æ–¥ –∏–∑ –±–æ—Ç–∞ (KeyboardInterrupt/SystemExit)")
    except Exception as e:
         logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ asyncio.run(main): {e}", exc_info=True)