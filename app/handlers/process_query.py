# –õ—É—á—à–µ –Ω–∞–∑–≤–∞—Ç—å process_query.py

from datetime import datetime

import pytz
from aiogram import Router, types
from aiogram.fsm.context import FSMContext

from app.bot_instance import bot
from app.config import SUPPORT_CHAT_ID, TIMEZONE
from app.stats import state_manager
from app.stats.question_stats import QuestionStates
from app.stats.state_manager import state_manager
from app.utils.google_sheet_utils import add_support_log_to_sheet
from app.utils.logger import setup_logger

logger = setup_logger(__name__)
router = Router()


async def process_enter_query(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ waiting_for_question.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ, –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü—É, —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.
    """
    current_state = await state.get_state()
    # –î–æ–ø. –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã —Ç–æ—á–Ω–æ –≤ –Ω—É–∂–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    if current_state != QuestionStates.waiting_for_question.state:
        logger.warning(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.id} –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏: {current_state}. –û–∂–∏–¥–∞–ª–æ—Å—å: {QuestionStates.waiting_for_question.state}")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø—Ä–∏—à–µ–ª –∏–º–µ–Ω–Ω–æ —Ç–µ–∫—Å—Ç
    if not message.text or message.text.startswith('/'):
        logger.warning(f"–ü–æ–ª—É—á–µ–Ω–æ –Ω–µ—Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç {message.from_user.id} –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ waiting_for_question.")
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º.")
        # –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∂–¥–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥
        return

    query_text = message.text.strip()
    user_id = message.from_user.id
    user_name = message.from_user.username if message.from_user.username else message.from_user.first_name

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∏ –∑–æ–Ω–µ
    tz = pytz.timezone(TIMEZONE)
    current_datetime = datetime.now(tz)
    # –§–æ—Ä–º–∞—Ç –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    date_str_sheet = current_datetime.strftime('%Y-%m-%d %H:%M:%S') # –î–ª—è —Ç–∞–±–ª–∏—Ü—ã
    date_str_display = current_datetime.strftime('%d.%m.%Y %H:%M') # –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    id_query = f"q_{user_id}_{current_datetime.strftime('%y%m%d%H%M%S')}" # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID

    logger.info(f"User {user_id} ('{user_name}') –≤–≤–µ–ª –≤–æ–ø—Ä–æ—Å: '{query_text}'. Date: {date_str_sheet}, ID_Query: {id_query}")

    # 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º –í–°–ï –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ state –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ (–ø–æ–∫–∞–∑ —Å–≤–æ–¥–∫–∏)
    await state.update_data(
        query=query_text,
        user_id=str(user_id), # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
        user_name=user_name,
        date=date_str_display, # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        id_query=id_query,
        date_for_sheet=date_str_sheet # –û—Ç–¥–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    )
    logger.debug(f"–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ state –¥–ª—è user {user_id}")

    # --- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π: –ó–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É –∏ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ---
    # –≠—Ç–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ó–î–ï–°–¨, –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –∫ –ø–æ–∫–∞–∑—É —Å–≤–æ–¥–∫–∏

    # 2. –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets
    sheet_log_data = {
        "date": date_str_sheet, # –î–∞—Ç–∞ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        'user_id': str(user_id),
        'user_name': user_name,
        'query': query_text,
        'id_query': id_query # –î–æ–±–∞–≤—å, –µ—Å–ª–∏ —Å—Ç–æ–ª–±–µ—Ü –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ –∏ EXPECTED_HEADERS
    }
    try:
        # –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é..."
        # await message.answer("‚è≥ –ú–∏–Ω—É—Ç–∫—É, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...")
        log_added = await add_support_log_to_sheet(sheet_log_data)
        if log_added:
            logger.info(f"–í–æ–ø—Ä–æ—Å user_id={user_id} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ Google Sheets.")
        else:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –≤–æ–ø—Ä–æ—Å user_id={user_id} –≤ Google Sheets (add_support_log_to_sheet –≤–µ—Ä–Ω—É–ª False).")
    except Exception as log_err:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ add_support_log_to_sheet –¥–ª—è user_id={user_id}: {log_err}", exc_info=True)
    # –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # 3. –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    try:
        if not SUPPORT_CHAT_ID:
             logger.error("ID —á–∞—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (SUPPORT_CHAT_ID) –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        else:
            notification_body = (
                f"<b>‚ùóÔ∏è –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!</b>\n\n"
                f"üÜî <b>ID –ó–∞—è–≤–∫–∏:</b> {id_query}\n"
                f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user_name} (ID: {user_id})\n"
                f"üìÖ <b>–í—Ä–µ–º—è:</b> {date_str_sheet}\n\n" # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏
                f"üìù <b>–í–æ–ø—Ä–æ—Å/–ü—Ä–æ–±–ª–µ–º–∞:</b>\n{query_text}\n"
            )
            await bot.send_message(
                chat_id=SUPPORT_CHAT_ID,
                text=notification_body,
                parse_mode="HTML",
                disable_web_page_preview=True
            )
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞—â–µ–Ω–∏–∏ user_id={user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {SUPPORT_CHAT_ID}.")
    except Exception as notify_err:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ {SUPPORT_CHAT_ID} –¥–ª—è user_id={user_id}: {notify_err}", exc_info=True)

    # --- –ö–æ–Ω–µ—Ü –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π ---

    # 4. –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é —á–µ—Ä–µ–∑ StateManager
    # –°–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–∞–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–≤–æ–¥–∫—É
    logger.debug(f"–ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ process_enter_query –¥–ª—è user {user_id}")
    await state_manager.handle_transition(message, state, "next")
